// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(CampBookingContext))]
    partial class CampBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BAL.Models.AdminModel", b =>
                {
                    b.Property<string>("Admin_Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Admin_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Admin_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Admin_Email");

                    b.ToTable("admin");

                    b.HasData(
                        new
                        {
                            Admin_Email = "sumit.sahu@nagarro.com",
                            Admin_Name = "sumit",
                            Admin_Password = "riTdZHBf6WwlWwtV+U+fI8nGNpxWVj2JGS91VS0SU/4tx3ko"
                        });
                });

            modelBuilder.Entity("BAL.Models.CampBookingModel", b =>
                {
                    b.Property<string>("Booking_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Billing_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Camp_Id")
                        .HasColumnType("int");

                    b.Property<string>("Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total_Amount")
                        .HasColumnType("float");

                    b.Property<int>("Total_Stay")
                        .HasColumnType("int");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Booking_Id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("BAL.Models.CampFeedbackModel", b =>
                {
                    b.Property<int>("Feedback_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Feedback_Id"), 1L, 1);

                    b.Property<string>("Booking_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Camp_Id")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Feedback_Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("BAL.Models.CampModel", b =>
                {
                    b.Property<int>("Camp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Camp_id"), 1L, 1);

                    b.Property<bool>("Booked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Camp_avaliable_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Camp_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Camp_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Camp_price")
                        .HasColumnType("float");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Camp_id");

                    b.ToTable("Camps");
                });
#pragma warning restore 612, 618
        }
    }
}
